/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    macros {
        macro_2: macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp TAB>;
            label = "MACRO_1";
        };

        macro_3: macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp TAB &kp DOUBLE_QUOTES>;
            label = "MACRO_2";
        };

        macro_1: macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp A &kp R &kp B &kp O &kp N &kp DLLR &kp DLLR &kp N0 &kp N5>;
            label = "MACRO_1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB    &kp SQT        &kp COMMA  &kp PERIOD  &kp P  &kp Y                                                        &kp F      &kp G     &kp C     &kp R  &kp L  &kp ESCAPE
&macro_1   &kp A          &kp O      &kp E       &kp U  &kp I                                                        &kp D      &kp H     &kp T     &kp N  &kp S  &kp FSLH
&kp LSHFT  &kp SEMICOLON  &kp Q      &kp J       &kp K  &kp X          &kp UP_ARROW  &kp DOWN  &kp LEFT   &kp RIGHT  &kp B      &kp M     &kp W     &kp V  &kp Z  &kp RIGHT_SHIFT
                                     &kp LGUI    &mo 1  &kp BACKSPACE  &macro_2      &mo 2     &kp ENTER  &kp MINUS  &kp SPACE  &macro_3  &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        symbols {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans                 &kp AMPS    &kp ASTRK    &kp LEFT_PARENTHESIS  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &kp RIGHT_PARENTHESIS  &kp DOLLAR  &kp PERCENT  &kp CARET             &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans                 &kp EXCL    &kp AT       &kp HASH              &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans                 &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numbers_rgb {
            bindings = <
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &trans  &trans                                  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &trans  &trans                                  &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans           &trans           &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                                   &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
